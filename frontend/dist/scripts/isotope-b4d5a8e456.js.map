{"version":3,"sources":["../bower_components/isotope-layout/dist/isotope.pkgd.js"],"names":["window","factory","define","amd","jQuery","module","exports","require","jQueryBridget","arraySlice","Array","prototype","slice","console","logError","message","error","namespace","PluginClass","$","methodCall","$elems","methodName","args","returnValue","pluginMethodStr","each","i","elem","instance","data","method","charAt","value","apply","undefined","plainCall","options","option","_init","opts","isPlainObject","this","extend","fn","arg0","call","arguments","updateJQuery","bridget","global","EvEmitter","proto","on","eventName","listener","events","_events","listeners","indexOf","push","once","onceEvents","_onceEvents","off","length","index","splice","emitEvent","onceListeners","allOff","getSize","getStyleSize","num","parseFloat","isNaN","measurements","measurementsLength","getStyle","style","getComputedStyle","isBoxSizeOuter","isSetup","div","document","createElement","width","padding","borderStyle","borderWidth","boxSizing","body","documentElement","appendChild","Math","round","removeChild","setup","querySelector","nodeType","display","size","height","innerWidth","innerHeight","outerWidth","outerHeight","getZeroSize","offsetWidth","offsetHeight","isBorderBox","measurement","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingTop","paddingBottom","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","matchesSelector","matchesMethod","ElemProto","Element","matches","prefixes","selector","fizzyUIUtils","utils","a","b","prop","modulo","makeArray","obj","isArray","removeFrom","ary","getParent","parentNode","getQueryElement","handleEvent","event","type","filterFindElements","elems","ffElems","forEach","HTMLElement","childElems","querySelectorAll","debounceMethod","_class","threshold","timeoutName","timeout","clearTimeout","_this","setTimeout","docReady","callback","readyState","addEventListener","toDashed","str","replace","match","$1","$2","toLowerCase","htmlInit","WidgetClass","dashedNamespace","dataAttr","dataAttrElems","jsDashElems","concat","dataOptionsAttr","attr","getAttribute","JSON","parse","className","Outlayer","Item","docElemStyle","transitionProperty","transition","transformProperty","transform","transitionEndEvent","WebkitTransition","vendorProperties","transitionDuration","transitionDelay","element","layout","position","x","y","_create","Object","create","constructor","_transn","ingProperties","clean","onEnd","css","elemStyle","getPosition","isOriginLeft","_getOption","isOriginTop","xValue","yValue","layoutSize","layoutPosition","xPadding","xProperty","xResetProperty","getXValue","yPadding","yProperty","yResetProperty","getYValue","isHorizontal","percentPosition","_transitionTo","curX","curY","didNotMove","setPosition","isTransitioning","transX","transY","transitionStyle","getTranslate","to","onTransitionEnd","isCleaning","goTo","moveTo","_nonTransition","_removeStyles","_transition","from","enableTransition","transitionProps","duration","staggerDelay","onwebkitTransitionEnd","ontransitionend","onotransitionend","dashedVendorProperties","-webkit-transform","target","propertyName","isEmptyObj","disableTransition","removeTransitionStyles","removeEventListener","cleanStyle","cleanTransitionStyle","stagger","delay","removeElem","remove","hide","reveal","isHidden","getHideRevealTransitionEndProperty","onRevealTransitionEnd","hiddenStyle","visibleStyle","styleProperty","optionStyle","opacity","onHideTransitionEnd","destroy","left","right","top","bottom","noop","GUID","instances","queryElement","$element","defaults","id","outlayerGUID","containerStyle","initLayout","originLeft","originTop","resize","resizeContainer","subclass","Parent","SubClass","oldOption","compatOptions","horizontal","layoutInstant","reloadItems","stamps","stamp","bindResize","items","_itemize","children","itemElems","_filterFindItemElements","item","itemSelector","getItemElements","map","_resetLayout","_manageStamps","isInstant","_isLayoutInited","layoutItems","_getMeasurement","_getItemsForLayout","_layoutItems","_postLayout","filter","isIgnored","_emitCompleteOnItems","queue","_getItemLayoutPosition","isLayoutInstant","_processLayoutQueue","updateStagger","_positionItem","time","unit","msUnits","getMilliseconds","_getContainerSize","_setContainerMeasure","measure","isWidth","elemSize","max","onComplete","dispatchEvent","count","doneCount","tick","emitArgs","$event","Event","trigger","ignore","getItem","unignore","_find","unstamp","_getBoundingRect","_manageStamp","boundingRect","getBoundingClientRect","_boundingRect","_getElementOffset","thisRect","isResizeBound","unbindResize","onresize","needsResizeLayout","addItems","appended","prepended","previousItems","revealItemElements","getItems","hideItemElements","removeItems","removeData","Layout","ms","s","Isotope","itemGUID","sortData","updateSortData","random","getSortData","sorters","_sorters","key","sorter","_destroy","LayoutMode","isotope","filteredItems","needsVerticalResizeLayout","getColumnWidth","getSegmentSize","getRowHeight","segment","segmentName","outerSize","firstItemSize","getFirstItemSize","firstItem","modes","Mode","Masonry","fitWidth","measureColumns","colYs","cols","maxY","horizontalColIndex","getContainerWidth","columnWidth","firstItemElem","containerWidth","gutter","excess","container","remainder","colSpan","min","colPosition","horizontalOrder","col","setHeight","setMax","_getTopColPosition","colGroup","_getTopColGroup","minimumY","groupCount","_getColGroupY","groupColYs","_getHorizontalColPosition","hasSize","stampSize","offset","firstX","lastX","firstCol","floor","lastCol","stampMaxY","_getContainerFitWidth","unusedCols","previousWidth","MasonryMode","keepModeMethods","isFitWidth","FitRows","itemWidth","Vertical","horizontalAlignment","trim","String","layoutMode","isJQueryFiltering","sortAscending","name","_getSorters","sortHistory","_initLayoutMode","_updateItemsSortData","initialOpts","_layout","arrange","_getIsInstant","filtered","_filter","_bindArrangeComplete","_isInstant","_noTransition","_hideReveal","_sort","needReveal","needHide","isLayoutComplete","isHideComplete","isRevealComplete","arrangeParallelCallback","hiddenMatched","visibleUnmatched","test","_getFilterTest","isMatched","is","mungeSorter","len","split","query","attrMatch","getValue","child","textContent","getValueGetter","parser","sortDataParsers","parseInt","val","sortBy","sortBys","_getIsSameSortBy","itemSorter","sortAsc","itemA","itemB","getItemSorter","sort","_mode","mode","Error","_filterRevealAdded","insert","filteredInsertItems","_remove","shuffle","getFilteredItemElements"],"mappings":"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","file":"isotope-b4d5a8e456.js","sourcesContent":["/*!\n * Isotope PACKAGED v3.0.6\n *\n * Licensed GPLv3 for open source use\n * or Isotope Commercial License for commercial use\n *\n * https://isotope.metafizzy.co\n * Copyright 2010-2018 Metafizzy\n */\n\n/**\n * Bridget makes jQuery widgets\n * v2.0.1\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( 'jquery-bridget/jquery-bridget',[ 'jquery' ], function( jQuery ) {\n      return factory( window, jQuery );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('jquery')\n    );\n  } else {\n    // browser global\n    window.jQueryBridget = factory(\n      window,\n      window.jQuery\n    );\n  }\n\n}( window, function factory( window, jQuery ) {\n'use strict';\n\n// ----- utils ----- //\n\nvar arraySlice = Array.prototype.slice;\n\n// helper function for logging errors\n// $.error breaks jQuery chaining\nvar console = window.console;\nvar logError = typeof console == 'undefined' ? function() {} :\n  function( message ) {\n    console.error( message );\n  };\n\n// ----- jQueryBridget ----- //\n\nfunction jQueryBridget( namespace, PluginClass, $ ) {\n  $ = $ || jQuery || window.jQuery;\n  if ( !$ ) {\n    return;\n  }\n\n  // add option method -> $().plugin('option', {...})\n  if ( !PluginClass.prototype.option ) {\n    // option setter\n    PluginClass.prototype.option = function( opts ) {\n      // bail out if not an object\n      if ( !$.isPlainObject( opts ) ){\n        return;\n      }\n      this.options = $.extend( true, this.options, opts );\n    };\n  }\n\n  // make jQuery plugin\n  $.fn[ namespace ] = function( arg0 /*, arg1 */ ) {\n    if ( typeof arg0 == 'string' ) {\n      // method call $().plugin( 'methodName', { options } )\n      // shift arguments by 1\n      var args = arraySlice.call( arguments, 1 );\n      return methodCall( this, arg0, args );\n    }\n    // just $().plugin({ options })\n    plainCall( this, arg0 );\n    return this;\n  };\n\n  // $().plugin('methodName')\n  function methodCall( $elems, methodName, args ) {\n    var returnValue;\n    var pluginMethodStr = '$().' + namespace + '(\"' + methodName + '\")';\n\n    $elems.each( function( i, elem ) {\n      // get instance\n      var instance = $.data( elem, namespace );\n      if ( !instance ) {\n        logError( namespace + ' not initialized. Cannot call methods, i.e. ' +\n          pluginMethodStr );\n        return;\n      }\n\n      var method = instance[ methodName ];\n      if ( !method || methodName.charAt(0) == '_' ) {\n        logError( pluginMethodStr + ' is not a valid method' );\n        return;\n      }\n\n      // apply method, get return value\n      var value = method.apply( instance, args );\n      // set return value if value is returned, use only first value\n      returnValue = returnValue === undefined ? value : returnValue;\n    });\n\n    return returnValue !== undefined ? returnValue : $elems;\n  }\n\n  function plainCall( $elems, options ) {\n    $elems.each( function( i, elem ) {\n      var instance = $.data( elem, namespace );\n      if ( instance ) {\n        // set options & init\n        instance.option( options );\n        instance._init();\n      } else {\n        // initialize new instance\n        instance = new PluginClass( elem, options );\n        $.data( elem, namespace, instance );\n      }\n    });\n  }\n\n  updateJQuery( $ );\n\n}\n\n// ----- updateJQuery ----- //\n\n// set $.bridget for v1 backwards compatibility\nfunction updateJQuery( $ ) {\n  if ( !$ || ( $ && $.bridget ) ) {\n    return;\n  }\n  $.bridget = jQueryBridget;\n}\n\nupdateJQuery( jQuery || window.jQuery );\n\n// -----  ----- //\n\nreturn jQueryBridget;\n\n}));\n\n/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( 'ev-emitter/ev-emitter',factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n\n/*!\n * getSize v2.0.3\n * measure size of elements\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n/* globals console: false */\n\n( function( window, factory ) {\n  /* jshint strict: false */ /* globals define, module */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( 'get-size/get-size',factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See https://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * Chrome & Safari measure the outer-width on style.width on border-box elems\n   * IE11 & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n  // round value for browser zoom. desandro/masonry#928\n  isBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;\n  getSize.isBoxSizeOuter = isBoxSizeOuter;\n\n  body.removeChild( div );\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n\n/**\n * matchesSelector v2.0.2\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( 'desandro-matches-selector/matches-selector',factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.matchesSelector = factory();\n  }\n\n}( window, function factory() {\n  'use strict';\n\n  var matchesMethod = ( function() {\n    var ElemProto = window.Element.prototype;\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0; i < prefixes.length; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  return function matchesSelector( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  };\n\n}));\n\n/**\n * Fizzy UI utils v2.0.7\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( 'fizzy-ui-utils/utils',[\n      'desandro-matches-selector/matches-selector'\n    ], function( matchesSelector ) {\n      return factory( window, matchesSelector );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-matches-selector')\n    );\n  } else {\n    // browser global\n    window.fizzyUIUtils = factory(\n      window,\n      window.matchesSelector\n    );\n  }\n\n}( window, function factory( window, matchesSelector ) {\n\n\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\nvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    return obj;\n  }\n  // return empty array if undefined or null. #6\n  if ( obj === null || obj === undefined ) {\n    return [];\n  }\n\n  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  if ( isArrayLike ) {\n    // convert nodeList to array\n    return arraySlice.call( obj );\n  }\n\n  // array of single index\n  return [ obj ];\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem.parentNode && elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  elems.forEach( function( elem ) {\n    // check that elem is an actual element\n    if ( !( elem instanceof HTMLElement ) ) {\n      return;\n    }\n    // add elem if no selector\n    if ( !selector ) {\n      ffElems.push( elem );\n      return;\n    }\n    // filter & find items if we have a selector\n    // filter\n    if ( matchesSelector( elem, selector ) ) {\n      ffElems.push( elem );\n    }\n    // find children\n    var childElems = elem.querySelectorAll( selector );\n    // concat childElems to filterFound array\n    for ( var i=0; i < childElems.length; i++ ) {\n      ffElems.push( childElems[i] );\n    }\n  });\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  threshold = threshold || 100;\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    clearTimeout( timeout );\n\n    var args = arguments;\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( callback ) {\n  var readyState = document.readyState;\n  if ( readyState == 'complete' || readyState == 'interactive' ) {\n    // do async to allow for other scripts to run. metafizzy/flickity#441\n    setTimeout( callback );\n  } else {\n    document.addEventListener( 'DOMContentLoaded', callback );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via [data-namespace] or .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-options\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var dataAttr = 'data-' + dashedNamespace;\n    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var elems = utils.makeArray( dataAttrElems )\n      .concat( utils.makeArray( jsDashElems ) );\n    var dataOptionsAttr = dataAttr + '-options';\n    var jQuery = window.jQuery;\n\n    elems.forEach( function( elem ) {\n      var attr = elem.getAttribute( dataAttr ) ||\n        elem.getAttribute( dataOptionsAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n          ': ' + error );\n        }\n        return;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('namespace')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    });\n\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n\n/**\n * Outlayer Item\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( 'outlayer/item',[\n        'ev-emitter/ev-emitter',\n        'get-size/get-size'\n      ],\n      factory\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      require('ev-emitter'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Outlayer = {};\n    window.Outlayer.Item = factory(\n      window.EvEmitter,\n      window.getSize\n    );\n  }\n\n}( window, function factory( EvEmitter, getSize ) {\n'use strict';\n\n// ----- helpers ----- //\n\nfunction isEmptyObj( obj ) {\n  for ( var prop in obj ) {\n    return false;\n  }\n  prop = null;\n  return true;\n}\n\n// -------------------------- CSS3 support -------------------------- //\n\n\nvar docElemStyle = document.documentElement.style;\n\nvar transitionProperty = typeof docElemStyle.transition == 'string' ?\n  'transition' : 'WebkitTransition';\nvar transformProperty = typeof docElemStyle.transform == 'string' ?\n  'transform' : 'WebkitTransform';\n\nvar transitionEndEvent = {\n  WebkitTransition: 'webkitTransitionEnd',\n  transition: 'transitionend'\n}[ transitionProperty ];\n\n// cache all vendor properties that could have vendor prefix\nvar vendorProperties = {\n  transform: transformProperty,\n  transition: transitionProperty,\n  transitionDuration: transitionProperty + 'Duration',\n  transitionProperty: transitionProperty + 'Property',\n  transitionDelay: transitionProperty + 'Delay'\n};\n\n// -------------------------- Item -------------------------- //\n\nfunction Item( element, layout ) {\n  if ( !element ) {\n    return;\n  }\n\n  this.element = element;\n  // parent layout class, i.e. Masonry, Isotope, or Packery\n  this.layout = layout;\n  this.position = {\n    x: 0,\n    y: 0\n  };\n\n  this._create();\n}\n\n// inherit EvEmitter\nvar proto = Item.prototype = Object.create( EvEmitter.prototype );\nproto.constructor = Item;\n\nproto._create = function() {\n  // transition objects\n  this._transn = {\n    ingProperties: {},\n    clean: {},\n    onEnd: {}\n  };\n\n  this.css({\n    position: 'absolute'\n  });\n};\n\n// trigger specified handler for event type\nproto.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * apply CSS styles to element\n * @param {Object} style\n */\nproto.css = function( style ) {\n  var elemStyle = this.element.style;\n\n  for ( var prop in style ) {\n    // use vendor property if available\n    var supportedProp = vendorProperties[ prop ] || prop;\n    elemStyle[ supportedProp ] = style[ prop ];\n  }\n};\n\n // measure position, and sets it\nproto.getPosition = function() {\n  var style = getComputedStyle( this.element );\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  var xValue = style[ isOriginLeft ? 'left' : 'right' ];\n  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];\n  var x = parseFloat( xValue );\n  var y = parseFloat( yValue );\n  // convert percent to pixels\n  var layoutSize = this.layout.size;\n  if ( xValue.indexOf('%') != -1 ) {\n    x = ( x / 100 ) * layoutSize.width;\n  }\n  if ( yValue.indexOf('%') != -1 ) {\n    y = ( y / 100 ) * layoutSize.height;\n  }\n  // clean up 'auto' or other non-integer values\n  x = isNaN( x ) ? 0 : x;\n  y = isNaN( y ) ? 0 : y;\n  // remove padding from measurement\n  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\n  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\n\n  this.position.x = x;\n  this.position.y = y;\n};\n\n// set settled position, apply padding\nproto.layoutPosition = function() {\n  var layoutSize = this.layout.size;\n  var style = {};\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n\n  // x\n  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\n  var xProperty = isOriginLeft ? 'left' : 'right';\n  var xResetProperty = isOriginLeft ? 'right' : 'left';\n\n  var x = this.position.x + layoutSize[ xPadding ];\n  // set in percentage or pixels\n  style[ xProperty ] = this.getXValue( x );\n  // reset other property\n  style[ xResetProperty ] = '';\n\n  // y\n  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\n  var yProperty = isOriginTop ? 'top' : 'bottom';\n  var yResetProperty = isOriginTop ? 'bottom' : 'top';\n\n  var y = this.position.y + layoutSize[ yPadding ];\n  // set in percentage or pixels\n  style[ yProperty ] = this.getYValue( y );\n  // reset other property\n  style[ yResetProperty ] = '';\n\n  this.css( style );\n  this.emitEvent( 'layout', [ this ] );\n};\n\nproto.getXValue = function( x ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && !isHorizontal ?\n    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';\n};\n\nproto.getYValue = function( y ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && isHorizontal ?\n    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';\n};\n\nproto._transitionTo = function( x, y ) {\n  this.getPosition();\n  // get current x & y from top/left\n  var curX = this.position.x;\n  var curY = this.position.y;\n\n  var didNotMove = x == this.position.x && y == this.position.y;\n\n  // save end position\n  this.setPosition( x, y );\n\n  // if did not move and not transitioning, just go to layout\n  if ( didNotMove && !this.isTransitioning ) {\n    this.layoutPosition();\n    return;\n  }\n\n  var transX = x - curX;\n  var transY = y - curY;\n  var transitionStyle = {};\n  transitionStyle.transform = this.getTranslate( transX, transY );\n\n  this.transition({\n    to: transitionStyle,\n    onTransitionEnd: {\n      transform: this.layoutPosition\n    },\n    isCleaning: true\n  });\n};\n\nproto.getTranslate = function( x, y ) {\n  // flip cooridinates if origin on right or bottom\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  x = isOriginLeft ? x : -x;\n  y = isOriginTop ? y : -y;\n  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n};\n\n// non transition + transform support\nproto.goTo = function( x, y ) {\n  this.setPosition( x, y );\n  this.layoutPosition();\n};\n\nproto.moveTo = proto._transitionTo;\n\nproto.setPosition = function( x, y ) {\n  this.position.x = parseFloat( x );\n  this.position.y = parseFloat( y );\n};\n\n// ----- transition ----- //\n\n/**\n * @param {Object} style - CSS\n * @param {Function} onTransitionEnd\n */\n\n// non transition, just trigger callback\nproto._nonTransition = function( args ) {\n  this.css( args.to );\n  if ( args.isCleaning ) {\n    this._removeStyles( args.to );\n  }\n  for ( var prop in args.onTransitionEnd ) {\n    args.onTransitionEnd[ prop ].call( this );\n  }\n};\n\n/**\n * proper transition\n * @param {Object} args - arguments\n *   @param {Object} to - style to transition to\n *   @param {Object} from - style to start transition from\n *   @param {Boolean} isCleaning - removes transition styles after transition\n *   @param {Function} onTransitionEnd - callback\n */\nproto.transition = function( args ) {\n  // redirect to nonTransition if no transition duration\n  if ( !parseFloat( this.layout.options.transitionDuration ) ) {\n    this._nonTransition( args );\n    return;\n  }\n\n  var _transition = this._transn;\n  // keep track of onTransitionEnd callback by css property\n  for ( var prop in args.onTransitionEnd ) {\n    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];\n  }\n  // keep track of properties that are transitioning\n  for ( prop in args.to ) {\n    _transition.ingProperties[ prop ] = true;\n    // keep track of properties to clean up when transition is done\n    if ( args.isCleaning ) {\n      _transition.clean[ prop ] = true;\n    }\n  }\n\n  // set from styles\n  if ( args.from ) {\n    this.css( args.from );\n    // force redraw. http://blog.alexmaccaw.com/css-transitions\n    var h = this.element.offsetHeight;\n    // hack for JSHint to hush about unused var\n    h = null;\n  }\n  // enable transition\n  this.enableTransition( args.to );\n  // set styles that are transitioning\n  this.css( args.to );\n\n  this.isTransitioning = true;\n\n};\n\n// dash before all cap letters, including first for\n// WebkitTransform => -webkit-transform\nfunction toDashedAll( str ) {\n  return str.replace( /([A-Z])/g, function( $1 ) {\n    return '-' + $1.toLowerCase();\n  });\n}\n\nvar transitionProps = 'opacity,' + toDashedAll( transformProperty );\n\nproto.enableTransition = function(/* style */) {\n  // HACK changing transitionProperty during a transition\n  // will cause transition to jump\n  if ( this.isTransitioning ) {\n    return;\n  }\n\n  // make `transition: foo, bar, baz` from style object\n  // HACK un-comment this when enableTransition can work\n  // while a transition is happening\n  // var transitionValues = [];\n  // for ( var prop in style ) {\n  //   // dash-ify camelCased properties like WebkitTransition\n  //   prop = vendorProperties[ prop ] || prop;\n  //   transitionValues.push( toDashedAll( prop ) );\n  // }\n  // munge number to millisecond, to match stagger\n  var duration = this.layout.options.transitionDuration;\n  duration = typeof duration == 'number' ? duration + 'ms' : duration;\n  // enable transition styles\n  this.css({\n    transitionProperty: transitionProps,\n    transitionDuration: duration,\n    transitionDelay: this.staggerDelay || 0\n  });\n  // listen for transition end event\n  this.element.addEventListener( transitionEndEvent, this, false );\n};\n\n// ----- events ----- //\n\nproto.onwebkitTransitionEnd = function( event ) {\n  this.ontransitionend( event );\n};\n\nproto.onotransitionend = function( event ) {\n  this.ontransitionend( event );\n};\n\n// properties that I munge to make my life easier\nvar dashedVendorProperties = {\n  '-webkit-transform': 'transform'\n};\n\nproto.ontransitionend = function( event ) {\n  // disregard bubbled events from children\n  if ( event.target !== this.element ) {\n    return;\n  }\n  var _transition = this._transn;\n  // get property name of transitioned property, convert to prefix-free\n  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;\n\n  // remove property that has completed transitioning\n  delete _transition.ingProperties[ propertyName ];\n  // check if any properties are still transitioning\n  if ( isEmptyObj( _transition.ingProperties ) ) {\n    // all properties have completed transitioning\n    this.disableTransition();\n  }\n  // clean style\n  if ( propertyName in _transition.clean ) {\n    // clean up style\n    this.element.style[ event.propertyName ] = '';\n    delete _transition.clean[ propertyName ];\n  }\n  // trigger onTransitionEnd callback\n  if ( propertyName in _transition.onEnd ) {\n    var onTransitionEnd = _transition.onEnd[ propertyName ];\n    onTransitionEnd.call( this );\n    delete _transition.onEnd[ propertyName ];\n  }\n\n  this.emitEvent( 'transitionEnd', [ this ] );\n};\n\nproto.disableTransition = function() {\n  this.removeTransitionStyles();\n  this.element.removeEventListener( transitionEndEvent, this, false );\n  this.isTransitioning = false;\n};\n\n/**\n * removes style property from element\n * @param {Object} style\n**/\nproto._removeStyles = function( style ) {\n  // clean up transition styles\n  var cleanStyle = {};\n  for ( var prop in style ) {\n    cleanStyle[ prop ] = '';\n  }\n  this.css( cleanStyle );\n};\n\nvar cleanTransitionStyle = {\n  transitionProperty: '',\n  transitionDuration: '',\n  transitionDelay: ''\n};\n\nproto.removeTransitionStyles = function() {\n  // remove transition\n  this.css( cleanTransitionStyle );\n};\n\n// ----- stagger ----- //\n\nproto.stagger = function( delay ) {\n  delay = isNaN( delay ) ? 0 : delay;\n  this.staggerDelay = delay + 'ms';\n};\n\n// ----- show/hide/remove ----- //\n\n// remove element from DOM\nproto.removeElem = function() {\n  this.element.parentNode.removeChild( this.element );\n  // remove display: none\n  this.css({ display: '' });\n  this.emitEvent( 'remove', [ this ] );\n};\n\nproto.remove = function() {\n  // just remove element if no transition support or no transition\n  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {\n    this.removeElem();\n    return;\n  }\n\n  // start transition\n  this.once( 'transitionEnd', function() {\n    this.removeElem();\n  });\n  this.hide();\n};\n\nproto.reveal = function() {\n  delete this.isHidden;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;\n\n  this.transition({\n    from: options.hiddenStyle,\n    to: options.visibleStyle,\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onRevealTransitionEnd = function() {\n  // check if still visible\n  // during transition, item may have been hidden\n  if ( !this.isHidden ) {\n    this.emitEvent('reveal');\n  }\n};\n\n/**\n * get style property use for hide/reveal transition end\n * @param {String} styleProperty - hiddenStyle/visibleStyle\n * @returns {String}\n */\nproto.getHideRevealTransitionEndProperty = function( styleProperty ) {\n  var optionStyle = this.layout.options[ styleProperty ];\n  // use opacity\n  if ( optionStyle.opacity ) {\n    return 'opacity';\n  }\n  // get first property\n  for ( var prop in optionStyle ) {\n    return prop;\n  }\n};\n\nproto.hide = function() {\n  // set flag\n  this.isHidden = true;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;\n\n  this.transition({\n    from: options.visibleStyle,\n    to: options.hiddenStyle,\n    // keep hidden stuff hidden\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onHideTransitionEnd = function() {\n  // check if still hidden\n  // during transition, item may have been un-hidden\n  if ( this.isHidden ) {\n    this.css({ display: 'none' });\n    this.emitEvent('hide');\n  }\n};\n\nproto.destroy = function() {\n  this.css({\n    position: '',\n    left: '',\n    right: '',\n    top: '',\n    bottom: '',\n    transition: '',\n    transform: ''\n  });\n};\n\nreturn Item;\n\n}));\n\n/*!\n * Outlayer v2.1.1\n * the brains and guts of a layout library\n * MIT license\n */\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( 'outlayer/outlayer',[\n        'ev-emitter/ev-emitter',\n        'get-size/get-size',\n        'fizzy-ui-utils/utils',\n        './item'\n      ],\n      function( EvEmitter, getSize, utils, Item ) {\n        return factory( window, EvEmitter, getSize, utils, Item);\n      }\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      window,\n      require('ev-emitter'),\n      require('get-size'),\n      require('fizzy-ui-utils'),\n      require('./item')\n    );\n  } else {\n    // browser global\n    window.Outlayer = factory(\n      window,\n      window.EvEmitter,\n      window.getSize,\n      window.fizzyUIUtils,\n      window.Outlayer.Item\n    );\n  }\n\n}( window, function factory( window, EvEmitter, getSize, utils, Item ) {\n'use strict';\n\n// ----- vars ----- //\n\nvar console = window.console;\nvar jQuery = window.jQuery;\nvar noop = function() {};\n\n// -------------------------- Outlayer -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Outlayer intances\nvar instances = {};\n\n\n/**\n * @param {Element, String} element\n * @param {Object} options\n * @constructor\n */\nfunction Outlayer( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for ' + this.constructor.namespace +\n        ': ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // add id for Outlayer.getFromElement\n  var id = ++GUID;\n  this.element.outlayerGUID = id; // expando\n  instances[ id ] = this; // associate via id\n\n  // kick it off\n  this._create();\n\n  var isInitLayout = this._getOption('initLayout');\n  if ( isInitLayout ) {\n    this.layout();\n  }\n}\n\n// settings are for internal use only\nOutlayer.namespace = 'outlayer';\nOutlayer.Item = Item;\n\n// default options\nOutlayer.defaults = {\n  containerStyle: {\n    position: 'relative'\n  },\n  initLayout: true,\n  originLeft: true,\n  originTop: true,\n  resize: true,\n  resizeContainer: true,\n  // item options\n  transitionDuration: '0.4s',\n  hiddenStyle: {\n    opacity: 0,\n    transform: 'scale(0.001)'\n  },\n  visibleStyle: {\n    opacity: 1,\n    transform: 'scale(1)'\n  }\n};\n\nvar proto = Outlayer.prototype;\n// inherit EvEmitter\nutils.extend( proto, EvEmitter.prototype );\n\n/**\n * set options\n * @param {Object} opts\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\n/**\n * get backwards compatible option value, check old name\n */\nproto._getOption = function( option ) {\n  var oldOption = this.constructor.compatOptions[ option ];\n  return oldOption && this.options[ oldOption ] !== undefined ?\n    this.options[ oldOption ] : this.options[ option ];\n};\n\nOutlayer.compatOptions = {\n  // currentName: oldName\n  initLayout: 'isInitLayout',\n  horizontal: 'isHorizontal',\n  layoutInstant: 'isLayoutInstant',\n  originLeft: 'isOriginLeft',\n  originTop: 'isOriginTop',\n  resize: 'isResizeBound',\n  resizeContainer: 'isResizingContainer'\n};\n\nproto._create = function() {\n  // get items from children\n  this.reloadItems();\n  // elements that affect layout, but are not laid out\n  this.stamps = [];\n  this.stamp( this.options.stamp );\n  // set container style\n  utils.extend( this.element.style, this.options.containerStyle );\n\n  // bind resize method\n  var canBindResize = this._getOption('resize');\n  if ( canBindResize ) {\n    this.bindResize();\n  }\n};\n\n// goes through all children again and gets bricks in proper order\nproto.reloadItems = function() {\n  // collection of item elements\n  this.items = this._itemize( this.element.children );\n};\n\n\n/**\n * turn elements into Outlayer.Items to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Outlayer Items\n */\nproto._itemize = function( elems ) {\n\n  var itemElems = this._filterFindItemElements( elems );\n  var Item = this.constructor.Item;\n\n  // create new Outlayer Items for collection\n  var items = [];\n  for ( var i=0; i < itemElems.length; i++ ) {\n    var elem = itemElems[i];\n    var item = new Item( elem, this );\n    items.push( item );\n  }\n\n  return items;\n};\n\n/**\n * get item elements to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - item elements\n */\nproto._filterFindItemElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.itemSelector );\n};\n\n/**\n * getter method for getting item elements\n * @returns {Array} elems - collection of item elements\n */\nproto.getItemElements = function() {\n  return this.items.map( function( item ) {\n    return item.element;\n  });\n};\n\n// ----- init & layout ----- //\n\n/**\n * lays out all items\n */\nproto.layout = function() {\n  this._resetLayout();\n  this._manageStamps();\n\n  // don't animate first layout\n  var layoutInstant = this._getOption('layoutInstant');\n  var isInstant = layoutInstant !== undefined ?\n    layoutInstant : !this._isLayoutInited;\n  this.layoutItems( this.items, isInstant );\n\n  // flag for initalized\n  this._isLayoutInited = true;\n};\n\n// _init is alias for layout\nproto._init = proto.layout;\n\n/**\n * logic before any new layout\n */\nproto._resetLayout = function() {\n  this.getSize();\n};\n\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * get measurement from option, for columnWidth, rowHeight, gutter\n * if option is String -> get element from selector string, & get size of element\n * if option is Element -> get size of element\n * else use option as a number\n *\n * @param {String} measurement\n * @param {String} size - width or height\n * @private\n */\nproto._getMeasurement = function( measurement, size ) {\n  var option = this.options[ measurement ];\n  var elem;\n  if ( !option ) {\n    // default to 0\n    this[ measurement ] = 0;\n  } else {\n    // use option as an element\n    if ( typeof option == 'string' ) {\n      elem = this.element.querySelector( option );\n    } else if ( option instanceof HTMLElement ) {\n      elem = option;\n    }\n    // use size of element, if element\n    this[ measurement ] = elem ? getSize( elem )[ size ] : option;\n  }\n};\n\n/**\n * layout a collection of item elements\n * @api public\n */\nproto.layoutItems = function( items, isInstant ) {\n  items = this._getItemsForLayout( items );\n\n  this._layoutItems( items, isInstant );\n\n  this._postLayout();\n};\n\n/**\n * get the items to be laid out\n * you may want to skip over some items\n * @param {Array} items\n * @returns {Array} items\n */\nproto._getItemsForLayout = function( items ) {\n  return items.filter( function( item ) {\n    return !item.isIgnored;\n  });\n};\n\n/**\n * layout items\n * @param {Array} items\n * @param {Boolean} isInstant\n */\nproto._layoutItems = function( items, isInstant ) {\n  this._emitCompleteOnItems( 'layout', items );\n\n  if ( !items || !items.length ) {\n    // no items, emit event with empty array\n    return;\n  }\n\n  var queue = [];\n\n  items.forEach( function( item ) {\n    // get x/y object from method\n    var position = this._getItemLayoutPosition( item );\n    // enqueue\n    position.item = item;\n    position.isInstant = isInstant || item.isLayoutInstant;\n    queue.push( position );\n  }, this );\n\n  this._processLayoutQueue( queue );\n};\n\n/**\n * get item layout position\n * @param {Outlayer.Item} item\n * @returns {Object} x and y position\n */\nproto._getItemLayoutPosition = function( /* item */ ) {\n  return {\n    x: 0,\n    y: 0\n  };\n};\n\n/**\n * iterate over array and position each item\n * Reason being - separating this logic prevents 'layout invalidation'\n * thx @paul_irish\n * @param {Array} queue\n */\nproto._processLayoutQueue = function( queue ) {\n  this.updateStagger();\n  queue.forEach( function( obj, i ) {\n    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );\n  }, this );\n};\n\n// set stagger from option in milliseconds number\nproto.updateStagger = function() {\n  var stagger = this.options.stagger;\n  if ( stagger === null || stagger === undefined ) {\n    this.stagger = 0;\n    return;\n  }\n  this.stagger = getMilliseconds( stagger );\n  return this.stagger;\n};\n\n/**\n * Sets position of item in DOM\n * @param {Outlayer.Item} item\n * @param {Number} x - horizontal position\n * @param {Number} y - vertical position\n * @param {Boolean} isInstant - disables transitions\n */\nproto._positionItem = function( item, x, y, isInstant, i ) {\n  if ( isInstant ) {\n    // if not transition, just set CSS\n    item.goTo( x, y );\n  } else {\n    item.stagger( i * this.stagger );\n    item.moveTo( x, y );\n  }\n};\n\n/**\n * Any logic you want to do after each layout,\n * i.e. size the container\n */\nproto._postLayout = function() {\n  this.resizeContainer();\n};\n\nproto.resizeContainer = function() {\n  var isResizingContainer = this._getOption('resizeContainer');\n  if ( !isResizingContainer ) {\n    return;\n  }\n  var size = this._getContainerSize();\n  if ( size ) {\n    this._setContainerMeasure( size.width, true );\n    this._setContainerMeasure( size.height, false );\n  }\n};\n\n/**\n * Sets width or height of container if returned\n * @returns {Object} size\n *   @param {Number} width\n *   @param {Number} height\n */\nproto._getContainerSize = noop;\n\n/**\n * @param {Number} measure - size of width or height\n * @param {Boolean} isWidth\n */\nproto._setContainerMeasure = function( measure, isWidth ) {\n  if ( measure === undefined ) {\n    return;\n  }\n\n  var elemSize = this.size;\n  // add padding and border width if border box\n  if ( elemSize.isBorderBox ) {\n    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +\n      elemSize.borderLeftWidth + elemSize.borderRightWidth :\n      elemSize.paddingBottom + elemSize.paddingTop +\n      elemSize.borderTopWidth + elemSize.borderBottomWidth;\n  }\n\n  measure = Math.max( measure, 0 );\n  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';\n};\n\n/**\n * emit eventComplete on a collection of items events\n * @param {String} eventName\n * @param {Array} items - Outlayer.Items\n */\nproto._emitCompleteOnItems = function( eventName, items ) {\n  var _this = this;\n  function onComplete() {\n    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );\n  }\n\n  var count = items.length;\n  if ( !items || !count ) {\n    onComplete();\n    return;\n  }\n\n  var doneCount = 0;\n  function tick() {\n    doneCount++;\n    if ( doneCount == count ) {\n      onComplete();\n    }\n  }\n\n  // bind callback\n  items.forEach( function( item ) {\n    item.once( eventName, tick );\n  });\n};\n\n/**\n * emits events via EvEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  // add original event to arguments\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery ) {\n    // set this.$element\n    this.$element = this.$element || jQuery( this.element );\n    if ( event ) {\n      // create jQuery event\n      var $event = jQuery.Event( event );\n      $event.type = type;\n      this.$element.trigger( $event, args );\n    } else {\n      // just trigger with type if no event available\n      this.$element.trigger( type, args );\n    }\n  }\n};\n\n// -------------------------- ignore & stamps -------------------------- //\n\n\n/**\n * keep item in collection, but do not lay it out\n * ignored items do not get skipped in layout\n * @param {Element} elem\n */\nproto.ignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    item.isIgnored = true;\n  }\n};\n\n/**\n * return item to layout collection\n * @param {Element} elem\n */\nproto.unignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    delete item.isIgnored;\n  }\n};\n\n/**\n * adds elements to stamps\n * @param {NodeList, Array, Element, or String} elems\n */\nproto.stamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ) {\n    return;\n  }\n\n  this.stamps = this.stamps.concat( elems );\n  // ignore\n  elems.forEach( this.ignore, this );\n};\n\n/**\n * removes elements to stamps\n * @param {NodeList, Array, or Element} elems\n */\nproto.unstamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ){\n    return;\n  }\n\n  elems.forEach( function( elem ) {\n    // filter out removed stamp elements\n    utils.removeFrom( this.stamps, elem );\n    this.unignore( elem );\n  }, this );\n};\n\n/**\n * finds child elements\n * @param {NodeList, Array, Element, or String} elems\n * @returns {Array} elems\n */\nproto._find = function( elems ) {\n  if ( !elems ) {\n    return;\n  }\n  // if string, use argument as selector string\n  if ( typeof elems == 'string' ) {\n    elems = this.element.querySelectorAll( elems );\n  }\n  elems = utils.makeArray( elems );\n  return elems;\n};\n\nproto._manageStamps = function() {\n  if ( !this.stamps || !this.stamps.length ) {\n    return;\n  }\n\n  this._getBoundingRect();\n\n  this.stamps.forEach( this._manageStamp, this );\n};\n\n// update boundingLeft / Top\nproto._getBoundingRect = function() {\n  // get bounding rect for container element\n  var boundingRect = this.element.getBoundingClientRect();\n  var size = this.size;\n  this._boundingRect = {\n    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\n    top: boundingRect.top + size.paddingTop + size.borderTopWidth,\n    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),\n    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )\n  };\n};\n\n/**\n * @param {Element} stamp\n**/\nproto._manageStamp = noop;\n\n/**\n * get x/y position of element relative to container element\n * @param {Element} elem\n * @returns {Object} offset - has left, top, right, bottom\n */\nproto._getElementOffset = function( elem ) {\n  var boundingRect = elem.getBoundingClientRect();\n  var thisRect = this._boundingRect;\n  var size = getSize( elem );\n  var offset = {\n    left: boundingRect.left - thisRect.left - size.marginLeft,\n    top: boundingRect.top - thisRect.top - size.marginTop,\n    right: thisRect.right - boundingRect.right - size.marginRight,\n    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\n  };\n  return offset;\n};\n\n// -------------------------- resize -------------------------- //\n\n// enable event handlers for listeners\n// i.e. resize -> onresize\nproto.handleEvent = utils.handleEvent;\n\n/**\n * Bind layout to window resizing\n */\nproto.bindResize = function() {\n  window.addEventListener( 'resize', this );\n  this.isResizeBound = true;\n};\n\n/**\n * Unbind layout to window resizing\n */\nproto.unbindResize = function() {\n  window.removeEventListener( 'resize', this );\n  this.isResizeBound = false;\n};\n\nproto.onresize = function() {\n  this.resize();\n};\n\nutils.debounceMethod( Outlayer, 'onresize', 100 );\n\nproto.resize = function() {\n  // don't trigger if size did not change\n  // or if resize was unbound. See #9\n  if ( !this.isResizeBound || !this.needsResizeLayout() ) {\n    return;\n  }\n\n  this.layout();\n};\n\n/**\n * check if layout is needed post layout\n * @returns Boolean\n */\nproto.needsResizeLayout = function() {\n  var size = getSize( this.element );\n  // check that this.size and size are there\n  // IE8 triggers resize on body size change, so they might not be\n  var hasSizes = this.size && size;\n  return hasSizes && size.innerWidth !== this.size.innerWidth;\n};\n\n// -------------------------- methods -------------------------- //\n\n/**\n * add items to Outlayer instance\n * @param {Array or NodeList or Element} elems\n * @returns {Array} items - Outlayer.Items\n**/\nproto.addItems = function( elems ) {\n  var items = this._itemize( elems );\n  // add items to collection\n  if ( items.length ) {\n    this.items = this.items.concat( items );\n  }\n  return items;\n};\n\n/**\n * Layout newly-appended item elements\n * @param {Array or NodeList or Element} elems\n */\nproto.appended = function( elems ) {\n  var items = this.addItems( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // layout and reveal just the new items\n  this.layoutItems( items, true );\n  this.reveal( items );\n};\n\n/**\n * Layout prepended elements\n * @param {Array or NodeList or Element} elems\n */\nproto.prepended = function( elems ) {\n  var items = this._itemize( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // add items to beginning of collection\n  var previousItems = this.items.slice(0);\n  this.items = items.concat( previousItems );\n  // start new layout\n  this._resetLayout();\n  this._manageStamps();\n  // layout new stuff without transition\n  this.layoutItems( items, true );\n  this.reveal( items );\n  // layout previous items\n  this.layoutItems( previousItems );\n};\n\n/**\n * reveal a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.reveal = function( items ) {\n  this._emitCompleteOnItems( 'reveal', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.reveal();\n  });\n};\n\n/**\n * hide a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.hide = function( items ) {\n  this._emitCompleteOnItems( 'hide', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.hide();\n  });\n};\n\n/**\n * reveal item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.revealItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.reveal( items );\n};\n\n/**\n * hide item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.hideItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.hide( items );\n};\n\n/**\n * get Outlayer.Item, given an Element\n * @param {Element} elem\n * @param {Function} callback\n * @returns {Outlayer.Item} item\n */\nproto.getItem = function( elem ) {\n  // loop through items to get the one that matches\n  for ( var i=0; i < this.items.length; i++ ) {\n    var item = this.items[i];\n    if ( item.element == elem ) {\n      // return item\n      return item;\n    }\n  }\n};\n\n/**\n * get collection of Outlayer.Items, given Elements\n * @param {Array} elems\n * @returns {Array} items - Outlayer.Items\n */\nproto.getItems = function( elems ) {\n  elems = utils.makeArray( elems );\n  var items = [];\n  elems.forEach( function( elem ) {\n    var item = this.getItem( elem );\n    if ( item ) {\n      items.push( item );\n    }\n  }, this );\n\n  return items;\n};\n\n/**\n * remove element(s) from instance and DOM\n * @param {Array or NodeList or Element} elems\n */\nproto.remove = function( elems ) {\n  var removeItems = this.getItems( elems );\n\n  this._emitCompleteOnItems( 'remove', removeItems );\n\n  // bail if no items to remove\n  if ( !removeItems || !removeItems.length ) {\n    return;\n  }\n\n  removeItems.forEach( function( item ) {\n    item.remove();\n    // remove item from collection\n    utils.removeFrom( this.items, item );\n  }, this );\n};\n\n// ----- destroy ----- //\n\n// remove and disable Outlayer instance\nproto.destroy = function() {\n  // clean up dynamic styles\n  var style = this.element.style;\n  style.height = '';\n  style.position = '';\n  style.width = '';\n  // destroy items\n  this.items.forEach( function( item ) {\n    item.destroy();\n  });\n\n  this.unbindResize();\n\n  var id = this.element.outlayerGUID;\n  delete instances[ id ]; // remove reference to instance by id\n  delete this.element.outlayerGUID;\n  // remove data for jQuery\n  if ( jQuery ) {\n    jQuery.removeData( this.element, this.constructor.namespace );\n  }\n\n};\n\n// -------------------------- data -------------------------- //\n\n/**\n * get Outlayer instance from element\n * @param {Element} elem\n * @returns {Outlayer}\n */\nOutlayer.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.outlayerGUID;\n  return id && instances[ id ];\n};\n\n\n// -------------------------- create Outlayer class -------------------------- //\n\n/**\n * create a layout class\n * @param {String} namespace\n */\nOutlayer.create = function( namespace, options ) {\n  // sub-class Outlayer\n  var Layout = subclass( Outlayer );\n  // apply new options and compatOptions\n  Layout.defaults = utils.extend( {}, Outlayer.defaults );\n  utils.extend( Layout.defaults, options );\n  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );\n\n  Layout.namespace = namespace;\n\n  Layout.data = Outlayer.data;\n\n  // sub-class Item\n  Layout.Item = subclass( Item );\n\n  // -------------------------- declarative -------------------------- //\n\n  utils.htmlInit( Layout, namespace );\n\n  // -------------------------- jQuery bridge -------------------------- //\n\n  // make into jQuery plugin\n  if ( jQuery && jQuery.bridget ) {\n    jQuery.bridget( namespace, Layout );\n  }\n\n  return Layout;\n};\n\nfunction subclass( Parent ) {\n  function SubClass() {\n    Parent.apply( this, arguments );\n  }\n\n  SubClass.prototype = Object.create( Parent.prototype );\n  SubClass.prototype.constructor = SubClass;\n\n  return SubClass;\n}\n\n// ----- helpers ----- //\n\n// how many milliseconds are in each unit\nvar msUnits = {\n  ms: 1,\n  s: 1000\n};\n\n// munge time-like parameter into millisecond number\n// '0.4s' -> 40\nfunction getMilliseconds( time ) {\n  if ( typeof time == 'number' ) {\n    return time;\n  }\n  var matches = time.match( /(^\\d*\\.?\\d*)(\\w*)/ );\n  var num = matches && matches[1];\n  var unit = matches && matches[2];\n  if ( !num.length ) {\n    return 0;\n  }\n  num = parseFloat( num );\n  var mult = msUnits[ unit ] || 1;\n  return num * mult;\n}\n\n// ----- fin ----- //\n\n// back in global\nOutlayer.Item = Item;\n\nreturn Outlayer;\n\n}));\n\n/**\n * Isotope Item\n**/\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( 'isotope-layout/js/item',[\n        'outlayer/outlayer'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('outlayer')\n    );\n  } else {\n    // browser global\n    window.Isotope = window.Isotope || {};\n    window.Isotope.Item = factory(\n      window.Outlayer\n    );\n  }\n\n}( window, function factory( Outlayer ) {\n'use strict';\n\n// -------------------------- Item -------------------------- //\n\n// sub-class Outlayer Item\nfunction Item() {\n  Outlayer.Item.apply( this, arguments );\n}\n\nvar proto = Item.prototype = Object.create( Outlayer.Item.prototype );\n\nvar _create = proto._create;\nproto._create = function() {\n  // assign id, used for original-order sorting\n  this.id = this.layout.itemGUID++;\n  _create.call( this );\n  this.sortData = {};\n};\n\nproto.updateSortData = function() {\n  if ( this.isIgnored ) {\n    return;\n  }\n  // default sorters\n  this.sortData.id = this.id;\n  // for backward compatibility\n  this.sortData['original-order'] = this.id;\n  this.sortData.random = Math.random();\n  // go thru getSortData obj and apply the sorters\n  var getSortData = this.layout.options.getSortData;\n  var sorters = this.layout._sorters;\n  for ( var key in getSortData ) {\n    var sorter = sorters[ key ];\n    this.sortData[ key ] = sorter( this.element, this );\n  }\n};\n\nvar _destroy = proto.destroy;\nproto.destroy = function() {\n  // call super\n  _destroy.apply( this, arguments );\n  // reset display, #741\n  this.css({\n    display: ''\n  });\n};\n\nreturn Item;\n\n}));\n\n/**\n * Isotope LayoutMode\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( 'isotope-layout/js/layout-mode',[\n        'get-size/get-size',\n        'outlayer/outlayer'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('get-size'),\n      require('outlayer')\n    );\n  } else {\n    // browser global\n    window.Isotope = window.Isotope || {};\n    window.Isotope.LayoutMode = factory(\n      window.getSize,\n      window.Outlayer\n    );\n  }\n\n}( window, function factory( getSize, Outlayer ) {\n  'use strict';\n\n  // layout mode class\n  function LayoutMode( isotope ) {\n    this.isotope = isotope;\n    // link properties\n    if ( isotope ) {\n      this.options = isotope.options[ this.namespace ];\n      this.element = isotope.element;\n      this.items = isotope.filteredItems;\n      this.size = isotope.size;\n    }\n  }\n\n  var proto = LayoutMode.prototype;\n\n  /**\n   * some methods should just defer to default Outlayer method\n   * and reference the Isotope instance as `this`\n  **/\n  var facadeMethods = [\n    '_resetLayout',\n    '_getItemLayoutPosition',\n    '_manageStamp',\n    '_getContainerSize',\n    '_getElementOffset',\n    'needsResizeLayout',\n    '_getOption'\n  ];\n\n  facadeMethods.forEach( function( methodName ) {\n    proto[ methodName ] = function() {\n      return Outlayer.prototype[ methodName ].apply( this.isotope, arguments );\n    };\n  });\n\n  // -----  ----- //\n\n  // for horizontal layout modes, check vertical size\n  proto.needsVerticalResizeLayout = function() {\n    // don't trigger if size did not change\n    var size = getSize( this.isotope.element );\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var hasSizes = this.isotope.size && size;\n    return hasSizes && size.innerHeight != this.isotope.size.innerHeight;\n  };\n\n  // ----- measurements ----- //\n\n  proto._getMeasurement = function() {\n    this.isotope._getMeasurement.apply( this, arguments );\n  };\n\n  proto.getColumnWidth = function() {\n    this.getSegmentSize( 'column', 'Width' );\n  };\n\n  proto.getRowHeight = function() {\n    this.getSegmentSize( 'row', 'Height' );\n  };\n\n  /**\n   * get columnWidth or rowHeight\n   * segment: 'column' or 'row'\n   * size 'Width' or 'Height'\n  **/\n  proto.getSegmentSize = function( segment, size ) {\n    var segmentName = segment + size;\n    var outerSize = 'outer' + size;\n    // columnWidth / outerWidth // rowHeight / outerHeight\n    this._getMeasurement( segmentName, outerSize );\n    // got rowHeight or columnWidth, we can chill\n    if ( this[ segmentName ] ) {\n      return;\n    }\n    // fall back to item of first element\n    var firstItemSize = this.getFirstItemSize();\n    this[ segmentName ] = firstItemSize && firstItemSize[ outerSize ] ||\n      // or size of container\n      this.isotope.size[ 'inner' + size ];\n  };\n\n  proto.getFirstItemSize = function() {\n    var firstItem = this.isotope.filteredItems[0];\n    return firstItem && firstItem.element && getSize( firstItem.element );\n  };\n\n  // ----- methods that should reference isotope ----- //\n\n  proto.layout = function() {\n    this.isotope.layout.apply( this.isotope, arguments );\n  };\n\n  proto.getSize = function() {\n    this.isotope.getSize();\n    this.size = this.isotope.size;\n  };\n\n  // -------------------------- create -------------------------- //\n\n  LayoutMode.modes = {};\n\n  LayoutMode.create = function( namespace, options ) {\n\n    function Mode() {\n      LayoutMode.apply( this, arguments );\n    }\n\n    Mode.prototype = Object.create( proto );\n    Mode.prototype.constructor = Mode;\n\n    // default options\n    if ( options ) {\n      Mode.options = options;\n    }\n\n    Mode.prototype.namespace = namespace;\n    // register in Isotope\n    LayoutMode.modes[ namespace ] = Mode;\n\n    return Mode;\n  };\n\n  return LayoutMode;\n\n}));\n\n/*!\n * Masonry v4.2.1\n * Cascading grid layout library\n * https://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( 'masonry-layout/masonry',[\n        'outlayer/outlayer',\n        'get-size/get-size'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('outlayer'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Masonry = factory(\n      window.Outlayer,\n      window.getSize\n    );\n  }\n\n}( window, function factory( Outlayer, getSize ) {\n\n\n\n// -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n  // isFitWidth -> fitWidth\n  Masonry.compatOptions.fitWidth = 'isFitWidth';\n\n  var proto = Masonry.prototype;\n\n  proto._resetLayout = function() {\n    this.getSize();\n    this._getMeasurement( 'columnWidth', 'outerWidth' );\n    this._getMeasurement( 'gutter', 'outerWidth' );\n    this.measureColumns();\n\n    // reset column Y\n    this.colYs = [];\n    for ( var i=0; i < this.cols; i++ ) {\n      this.colYs.push( 0 );\n    }\n\n    this.maxY = 0;\n    this.horizontalColIndex = 0;\n  };\n\n  proto.measureColumns = function() {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if ( !this.columnWidth ) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||\n        // if first elem has no width, default to size of container\n        this.containerWidth;\n    }\n\n    var columnWidth = this.columnWidth += this.gutter;\n\n    // calculate columns\n    var containerWidth = this.containerWidth + this.gutter;\n    var cols = containerWidth / columnWidth;\n    // fix rounding errors, typically with gutters\n    var excess = columnWidth - containerWidth % columnWidth;\n    // if overshoot is less than a pixel, round up, otherwise floor it\n    var mathMethod = excess && excess < 1 ? 'round' : 'floor';\n    cols = Math[ mathMethod ]( cols );\n    this.cols = Math.max( cols, 1 );\n  };\n\n  proto.getContainerWidth = function() {\n    // container is parent if fit width\n    var isFitWidth = this._getOption('fitWidth');\n    var container = isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize( container );\n    this.containerWidth = size && size.innerWidth;\n  };\n\n  proto._getItemLayoutPosition = function( item ) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );\n    colSpan = Math.min( colSpan, this.cols );\n    // use horizontal or top column position\n    var colPosMethod = this.options.horizontalOrder ?\n      '_getHorizontalColPosition' : '_getTopColPosition';\n    var colPosition = this[ colPosMethod ]( colSpan, item );\n    // position the brick\n    var position = {\n      x: this.columnWidth * colPosition.col,\n      y: colPosition.y\n    };\n    // apply setHeight to necessary columns\n    var setHeight = colPosition.y + item.size.outerHeight;\n    var setMax = colSpan + colPosition.col;\n    for ( var i = colPosition.col; i < setMax; i++ ) {\n      this.colYs[i] = setHeight;\n    }\n\n    return position;\n  };\n\n  proto._getTopColPosition = function( colSpan ) {\n    var colGroup = this._getTopColGroup( colSpan );\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply( Math, colGroup );\n\n    return {\n      col: colGroup.indexOf( minimumY ),\n      y: minimumY,\n    };\n  };\n\n  /**\n   * @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup\n   */\n  proto._getTopColGroup = function( colSpan ) {\n    if ( colSpan < 2 ) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for ( var i = 0; i < groupCount; i++ ) {\n      colGroup[i] = this._getColGroupY( i, colSpan );\n    }\n    return colGroup;\n  };\n\n  proto._getColGroupY = function( col, colSpan ) {\n    if ( colSpan < 2 ) {\n      return this.colYs[ col ];\n    }\n    // make an array of colY values for that one group\n    var groupColYs = this.colYs.slice( col, col + colSpan );\n    // and get the max value of the array\n    return Math.max.apply( Math, groupColYs );\n  };\n\n  // get column position based on horizontal index. #873\n  proto._getHorizontalColPosition = function( colSpan, item ) {\n    var col = this.horizontalColIndex % this.cols;\n    var isOver = colSpan > 1 && col + colSpan > this.cols;\n    // shift to next row if item can't fit on current row\n    col = isOver ? 0 : col;\n    // don't let zero-size items take up space\n    var hasSize = item.size.outerWidth && item.size.outerHeight;\n    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;\n\n    return {\n      col: col,\n      y: this._getColGroupY( col, colSpan ),\n    };\n  };\n\n  proto._manageStamp = function( stamp ) {\n    var stampSize = getSize( stamp );\n    var offset = this._getElementOffset( stamp );\n    // get the columns that this stamp affects\n    var isOriginLeft = this._getOption('originLeft');\n    var firstX = isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor( firstX / this.columnWidth );\n    firstCol = Math.max( 0, firstCol );\n    var lastCol = Math.floor( lastX / this.columnWidth );\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min( this.cols - 1, lastCol );\n    // set colYs to bottom of the stamp\n\n    var isOriginTop = this._getOption('originTop');\n    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +\n      stampSize.outerHeight;\n    for ( var i = firstCol; i <= lastCol; i++ ) {\n      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );\n    }\n  };\n\n  proto._getContainerSize = function() {\n    this.maxY = Math.max.apply( Math, this.colYs );\n    var size = {\n      height: this.maxY\n    };\n\n    if ( this._getOption('fitWidth') ) {\n      size.width = this._getContainerFitWidth();\n    }\n\n    return size;\n  };\n\n  proto._getContainerFitWidth = function() {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while ( --i ) {\n      if ( this.colYs[i] !== 0 ) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;\n  };\n\n  proto.needsResizeLayout = function() {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth != this.containerWidth;\n  };\n\n  return Masonry;\n\n}));\n\n/*!\n * Masonry layout mode\n * sub-classes Masonry\n * https://masonry.desandro.com\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( 'isotope-layout/js/layout-modes/masonry',[\n        '../layout-mode',\n        'masonry-layout/masonry'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('../layout-mode'),\n      require('masonry-layout')\n    );\n  } else {\n    // browser global\n    factory(\n      window.Isotope.LayoutMode,\n      window.Masonry\n    );\n  }\n\n}( window, function factory( LayoutMode, Masonry ) {\n'use strict';\n\n// -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var MasonryMode = LayoutMode.create('masonry');\n\n  var proto = MasonryMode.prototype;\n\n  var keepModeMethods = {\n    _getElementOffset: true,\n    layout: true,\n    _getMeasurement: true\n  };\n\n  // inherit Masonry prototype\n  for ( var method in Masonry.prototype ) {\n    // do not inherit mode methods\n    if ( !keepModeMethods[ method ] ) {\n      proto[ method ] = Masonry.prototype[ method ];\n    }\n  }\n\n  var measureColumns = proto.measureColumns;\n  proto.measureColumns = function() {\n    // set items, used if measuring first item\n    this.items = this.isotope.filteredItems;\n    measureColumns.call( this );\n  };\n\n  // point to mode options for fitWidth\n  var _getOption = proto._getOption;\n  proto._getOption = function( option ) {\n    if ( option == 'fitWidth' ) {\n      return this.options.isFitWidth !== undefined ?\n        this.options.isFitWidth : this.options.fitWidth;\n    }\n    return _getOption.apply( this.isotope, arguments );\n  };\n\n  return MasonryMode;\n\n}));\n\n/**\n * fitRows layout mode\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( 'isotope-layout/js/layout-modes/fit-rows',[\n        '../layout-mode'\n      ],\n      factory );\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      require('../layout-mode')\n    );\n  } else {\n    // browser global\n    factory(\n      window.Isotope.LayoutMode\n    );\n  }\n\n}( window, function factory( LayoutMode ) {\n'use strict';\n\nvar FitRows = LayoutMode.create('fitRows');\n\nvar proto = FitRows.prototype;\n\nproto._resetLayout = function() {\n  this.x = 0;\n  this.y = 0;\n  this.maxY = 0;\n  this._getMeasurement( 'gutter', 'outerWidth' );\n};\n\nproto._getItemLayoutPosition = function( item ) {\n  item.getSize();\n\n  var itemWidth = item.size.outerWidth + this.gutter;\n  // if this element cannot fit in the current row\n  var containerWidth = this.isotope.size.innerWidth + this.gutter;\n  if ( this.x !== 0 && itemWidth + this.x > containerWidth ) {\n    this.x = 0;\n    this.y = this.maxY;\n  }\n\n  var position = {\n    x: this.x,\n    y: this.y\n  };\n\n  this.maxY = Math.max( this.maxY, this.y + item.size.outerHeight );\n  this.x += itemWidth;\n\n  return position;\n};\n\nproto._getContainerSize = function() {\n  return { height: this.maxY };\n};\n\nreturn FitRows;\n\n}));\n\n/**\n * vertical layout mode\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( 'isotope-layout/js/layout-modes/vertical',[\n        '../layout-mode'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('../layout-mode')\n    );\n  } else {\n    // browser global\n    factory(\n      window.Isotope.LayoutMode\n    );\n  }\n\n}( window, function factory( LayoutMode ) {\n'use strict';\n\nvar Vertical = LayoutMode.create( 'vertical', {\n  horizontalAlignment: 0\n});\n\nvar proto = Vertical.prototype;\n\nproto._resetLayout = function() {\n  this.y = 0;\n};\n\nproto._getItemLayoutPosition = function( item ) {\n  item.getSize();\n  var x = ( this.isotope.size.innerWidth - item.size.outerWidth ) *\n    this.options.horizontalAlignment;\n  var y = this.y;\n  this.y += item.size.outerHeight;\n  return { x: x, y: y };\n};\n\nproto._getContainerSize = function() {\n  return { height: this.y };\n};\n\nreturn Vertical;\n\n}));\n\n/*!\n * Isotope v3.0.6\n *\n * Licensed GPLv3 for open source use\n * or Isotope Commercial License for commercial use\n *\n * https://isotope.metafizzy.co\n * Copyright 2010-2018 Metafizzy\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        'outlayer/outlayer',\n        'get-size/get-size',\n        'desandro-matches-selector/matches-selector',\n        'fizzy-ui-utils/utils',\n        'isotope-layout/js/item',\n        'isotope-layout/js/layout-mode',\n        // include default layout modes\n        'isotope-layout/js/layout-modes/masonry',\n        'isotope-layout/js/layout-modes/fit-rows',\n        'isotope-layout/js/layout-modes/vertical'\n      ],\n      function( Outlayer, getSize, matchesSelector, utils, Item, LayoutMode ) {\n        return factory( window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode );\n      });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('outlayer'),\n      require('get-size'),\n      require('desandro-matches-selector'),\n      require('fizzy-ui-utils'),\n      require('isotope-layout/js/item'),\n      require('isotope-layout/js/layout-mode'),\n      // include default layout modes\n      require('isotope-layout/js/layout-modes/masonry'),\n      require('isotope-layout/js/layout-modes/fit-rows'),\n      require('isotope-layout/js/layout-modes/vertical')\n    );\n  } else {\n    // browser global\n    window.Isotope = factory(\n      window,\n      window.Outlayer,\n      window.getSize,\n      window.matchesSelector,\n      window.fizzyUIUtils,\n      window.Isotope.Item,\n      window.Isotope.LayoutMode\n    );\n  }\n\n}( window, function factory( window, Outlayer, getSize, matchesSelector, utils,\n  Item, LayoutMode ) {\n\n\n\n// -------------------------- vars -------------------------- //\n\nvar jQuery = window.jQuery;\n\n// -------------------------- helpers -------------------------- //\n\nvar trim = String.prototype.trim ?\n  function( str ) {\n    return str.trim();\n  } :\n  function( str ) {\n    return str.replace( /^\\s+|\\s+$/g, '' );\n  };\n\n// -------------------------- isotopeDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Isotope = Outlayer.create( 'isotope', {\n    layoutMode: 'masonry',\n    isJQueryFiltering: true,\n    sortAscending: true\n  });\n\n  Isotope.Item = Item;\n  Isotope.LayoutMode = LayoutMode;\n\n  var proto = Isotope.prototype;\n\n  proto._create = function() {\n    this.itemGUID = 0;\n    // functions that sort items\n    this._sorters = {};\n    this._getSorters();\n    // call super\n    Outlayer.prototype._create.call( this );\n\n    // create layout modes\n    this.modes = {};\n    // start filteredItems with all items\n    this.filteredItems = this.items;\n    // keep of track of sortBys\n    this.sortHistory = [ 'original-order' ];\n    // create from registered layout modes\n    for ( var name in LayoutMode.modes ) {\n      this._initLayoutMode( name );\n    }\n  };\n\n  proto.reloadItems = function() {\n    // reset item ID counter\n    this.itemGUID = 0;\n    // call super\n    Outlayer.prototype.reloadItems.call( this );\n  };\n\n  proto._itemize = function() {\n    var items = Outlayer.prototype._itemize.apply( this, arguments );\n    // assign ID for original-order\n    for ( var i=0; i < items.length; i++ ) {\n      var item = items[i];\n      item.id = this.itemGUID++;\n    }\n    this._updateItemsSortData( items );\n    return items;\n  };\n\n\n  // -------------------------- layout -------------------------- //\n\n  proto._initLayoutMode = function( name ) {\n    var Mode = LayoutMode.modes[ name ];\n    // set mode options\n    // HACK extend initial options, back-fill in default options\n    var initialOpts = this.options[ name ] || {};\n    this.options[ name ] = Mode.options ?\n      utils.extend( Mode.options, initialOpts ) : initialOpts;\n    // init layout mode instance\n    this.modes[ name ] = new Mode( this );\n  };\n\n\n  proto.layout = function() {\n    // if first time doing layout, do all magic\n    if ( !this._isLayoutInited && this._getOption('initLayout') ) {\n      this.arrange();\n      return;\n    }\n    this._layout();\n  };\n\n  // private method to be used in layout() & magic()\n  proto._layout = function() {\n    // don't animate first layout\n    var isInstant = this._getIsInstant();\n    // layout flow\n    this._resetLayout();\n    this._manageStamps();\n    this.layoutItems( this.filteredItems, isInstant );\n\n    // flag for initalized\n    this._isLayoutInited = true;\n  };\n\n  // filter + sort + layout\n  proto.arrange = function( opts ) {\n    // set any options pass\n    this.option( opts );\n    this._getIsInstant();\n    // filter, sort, and layout\n\n    // filter\n    var filtered = this._filter( this.items );\n    this.filteredItems = filtered.matches;\n\n    this._bindArrangeComplete();\n\n    if ( this._isInstant ) {\n      this._noTransition( this._hideReveal, [ filtered ] );\n    } else {\n      this._hideReveal( filtered );\n    }\n\n    this._sort();\n    this._layout();\n  };\n  // alias to _init for main plugin method\n  proto._init = proto.arrange;\n\n  proto._hideReveal = function( filtered ) {\n    this.reveal( filtered.needReveal );\n    this.hide( filtered.needHide );\n  };\n\n  // HACK\n  // Don't animate/transition first layout\n  // Or don't animate/transition other layouts\n  proto._getIsInstant = function() {\n    var isLayoutInstant = this._getOption('layoutInstant');\n    var isInstant = isLayoutInstant !== undefined ? isLayoutInstant :\n      !this._isLayoutInited;\n    this._isInstant = isInstant;\n    return isInstant;\n  };\n\n  // listen for layoutComplete, hideComplete and revealComplete\n  // to trigger arrangeComplete\n  proto._bindArrangeComplete = function() {\n    // listen for 3 events to trigger arrangeComplete\n    var isLayoutComplete, isHideComplete, isRevealComplete;\n    var _this = this;\n    function arrangeParallelCallback() {\n      if ( isLayoutComplete && isHideComplete && isRevealComplete ) {\n        _this.dispatchEvent( 'arrangeComplete', null, [ _this.filteredItems ] );\n      }\n    }\n    this.once( 'layoutComplete', function() {\n      isLayoutComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once( 'hideComplete', function() {\n      isHideComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once( 'revealComplete', function() {\n      isRevealComplete = true;\n      arrangeParallelCallback();\n    });\n  };\n\n  // -------------------------- filter -------------------------- //\n\n  proto._filter = function( items ) {\n    var filter = this.options.filter;\n    filter = filter || '*';\n    var matches = [];\n    var hiddenMatched = [];\n    var visibleUnmatched = [];\n\n    var test = this._getFilterTest( filter );\n\n    // test each item\n    for ( var i=0; i < items.length; i++ ) {\n      var item = items[i];\n      if ( item.isIgnored ) {\n        continue;\n      }\n      // add item to either matched or unmatched group\n      var isMatched = test( item );\n      // item.isFilterMatched = isMatched;\n      // add to matches if its a match\n      if ( isMatched ) {\n        matches.push( item );\n      }\n      // add to additional group if item needs to be hidden or revealed\n      if ( isMatched && item.isHidden ) {\n        hiddenMatched.push( item );\n      } else if ( !isMatched && !item.isHidden ) {\n        visibleUnmatched.push( item );\n      }\n    }\n\n    // return collections of items to be manipulated\n    return {\n      matches: matches,\n      needReveal: hiddenMatched,\n      needHide: visibleUnmatched\n    };\n  };\n\n  // get a jQuery, function, or a matchesSelector test given the filter\n  proto._getFilterTest = function( filter ) {\n    if ( jQuery && this.options.isJQueryFiltering ) {\n      // use jQuery\n      return function( item ) {\n        return jQuery( item.element ).is( filter );\n      };\n    }\n    if ( typeof filter == 'function' ) {\n      // use filter as function\n      return function( item ) {\n        return filter( item.element );\n      };\n    }\n    // default, use filter as selector string\n    return function( item ) {\n      return matchesSelector( item.element, filter );\n    };\n  };\n\n  // -------------------------- sorting -------------------------- //\n\n  /**\n   * @params {Array} elems\n   * @public\n   */\n  proto.updateSortData = function( elems ) {\n    // get items\n    var items;\n    if ( elems ) {\n      elems = utils.makeArray( elems );\n      items = this.getItems( elems );\n    } else {\n      // update all items if no elems provided\n      items = this.items;\n    }\n\n    this._getSorters();\n    this._updateItemsSortData( items );\n  };\n\n  proto._getSorters = function() {\n    var getSortData = this.options.getSortData;\n    for ( var key in getSortData ) {\n      var sorter = getSortData[ key ];\n      this._sorters[ key ] = mungeSorter( sorter );\n    }\n  };\n\n  /**\n   * @params {Array} items - of Isotope.Items\n   * @private\n   */\n  proto._updateItemsSortData = function( items ) {\n    // do not update if no items\n    var len = items && items.length;\n\n    for ( var i=0; len && i < len; i++ ) {\n      var item = items[i];\n      item.updateSortData();\n    }\n  };\n\n  // ----- munge sorter ----- //\n\n  // encapsulate this, as we just need mungeSorter\n  // other functions in here are just for munging\n  var mungeSorter = ( function() {\n    // add a magic layer to sorters for convienent shorthands\n    // `.foo-bar` will use the text of .foo-bar querySelector\n    // `[foo-bar]` will use attribute\n    // you can also add parser\n    // `.foo-bar parseInt` will parse that as a number\n    function mungeSorter( sorter ) {\n      // if not a string, return function or whatever it is\n      if ( typeof sorter != 'string' ) {\n        return sorter;\n      }\n      // parse the sorter string\n      var args = trim( sorter ).split(' ');\n      var query = args[0];\n      // check if query looks like [an-attribute]\n      var attrMatch = query.match( /^\\[(.+)\\]$/ );\n      var attr = attrMatch && attrMatch[1];\n      var getValue = getValueGetter( attr, query );\n      // use second argument as a parser\n      var parser = Isotope.sortDataParsers[ args[1] ];\n      // parse the value, if there was a parser\n      sorter = parser ? function( elem ) {\n        return elem && parser( getValue( elem ) );\n      } :\n      // otherwise just return value\n      function( elem ) {\n        return elem && getValue( elem );\n      };\n\n      return sorter;\n    }\n\n    // get an attribute getter, or get text of the querySelector\n    function getValueGetter( attr, query ) {\n      // if query looks like [foo-bar], get attribute\n      if ( attr ) {\n        return function getAttribute( elem ) {\n          return elem.getAttribute( attr );\n        };\n      }\n\n      // otherwise, assume its a querySelector, and get its text\n      return function getChildText( elem ) {\n        var child = elem.querySelector( query );\n        return child && child.textContent;\n      };\n    }\n\n    return mungeSorter;\n  })();\n\n  // parsers used in getSortData shortcut strings\n  Isotope.sortDataParsers = {\n    'parseInt': function( val ) {\n      return parseInt( val, 10 );\n    },\n    'parseFloat': function( val ) {\n      return parseFloat( val );\n    }\n  };\n\n  // ----- sort method ----- //\n\n  // sort filteredItem order\n  proto._sort = function() {\n    if ( !this.options.sortBy ) {\n      return;\n    }\n    // keep track of sortBy History\n    var sortBys = utils.makeArray( this.options.sortBy );\n    if ( !this._getIsSameSortBy( sortBys ) ) {\n      // concat all sortBy and sortHistory, add to front, oldest goes in last\n      this.sortHistory = sortBys.concat( this.sortHistory );\n    }\n    // sort magic\n    var itemSorter = getItemSorter( this.sortHistory, this.options.sortAscending );\n    this.filteredItems.sort( itemSorter );\n  };\n\n  // check if sortBys is same as start of sortHistory\n  proto._getIsSameSortBy = function( sortBys ) {\n    for ( var i=0; i < sortBys.length; i++ ) {\n      if ( sortBys[i] != this.sortHistory[i] ) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // returns a function used for sorting\n  function getItemSorter( sortBys, sortAsc ) {\n    return function sorter( itemA, itemB ) {\n      // cycle through all sortKeys\n      for ( var i = 0; i < sortBys.length; i++ ) {\n        var sortBy = sortBys[i];\n        var a = itemA.sortData[ sortBy ];\n        var b = itemB.sortData[ sortBy ];\n        if ( a > b || a < b ) {\n          // if sortAsc is an object, use the value given the sortBy key\n          var isAscending = sortAsc[ sortBy ] !== undefined ? sortAsc[ sortBy ] : sortAsc;\n          var direction = isAscending ? 1 : -1;\n          return ( a > b ? 1 : -1 ) * direction;\n        }\n      }\n      return 0;\n    };\n  }\n\n  // -------------------------- methods -------------------------- //\n\n  // get layout mode\n  proto._mode = function() {\n    var layoutMode = this.options.layoutMode;\n    var mode = this.modes[ layoutMode ];\n    if ( !mode ) {\n      // TODO console.error\n      throw new Error( 'No layout mode: ' + layoutMode );\n    }\n    // HACK sync mode's options\n    // any options set after init for layout mode need to be synced\n    mode.options = this.options[ layoutMode ];\n    return mode;\n  };\n\n  proto._resetLayout = function() {\n    // trigger original reset layout\n    Outlayer.prototype._resetLayout.call( this );\n    this._mode()._resetLayout();\n  };\n\n  proto._getItemLayoutPosition = function( item  ) {\n    return this._mode()._getItemLayoutPosition( item );\n  };\n\n  proto._manageStamp = function( stamp ) {\n    this._mode()._manageStamp( stamp );\n  };\n\n  proto._getContainerSize = function() {\n    return this._mode()._getContainerSize();\n  };\n\n  proto.needsResizeLayout = function() {\n    return this._mode().needsResizeLayout();\n  };\n\n  // -------------------------- adding & removing -------------------------- //\n\n  // HEADS UP overwrites default Outlayer appended\n  proto.appended = function( elems ) {\n    var items = this.addItems( elems );\n    if ( !items.length ) {\n      return;\n    }\n    // filter, layout, reveal new items\n    var filteredItems = this._filterRevealAdded( items );\n    // add to filteredItems\n    this.filteredItems = this.filteredItems.concat( filteredItems );\n  };\n\n  // HEADS UP overwrites default Outlayer prepended\n  proto.prepended = function( elems ) {\n    var items = this._itemize( elems );\n    if ( !items.length ) {\n      return;\n    }\n    // start new layout\n    this._resetLayout();\n    this._manageStamps();\n    // filter, layout, reveal new items\n    var filteredItems = this._filterRevealAdded( items );\n    // layout previous items\n    this.layoutItems( this.filteredItems );\n    // add to items and filteredItems\n    this.filteredItems = filteredItems.concat( this.filteredItems );\n    this.items = items.concat( this.items );\n  };\n\n  proto._filterRevealAdded = function( items ) {\n    var filtered = this._filter( items );\n    this.hide( filtered.needHide );\n    // reveal all new items\n    this.reveal( filtered.matches );\n    // layout new items, no transition\n    this.layoutItems( filtered.matches, true );\n    return filtered.matches;\n  };\n\n  /**\n   * Filter, sort, and layout newly-appended item elements\n   * @param {Array or NodeList or Element} elems\n   */\n  proto.insert = function( elems ) {\n    var items = this.addItems( elems );\n    if ( !items.length ) {\n      return;\n    }\n    // append item elements\n    var i, item;\n    var len = items.length;\n    for ( i=0; i < len; i++ ) {\n      item = items[i];\n      this.element.appendChild( item.element );\n    }\n    // filter new stuff\n    var filteredInsertItems = this._filter( items ).matches;\n    // set flag\n    for ( i=0; i < len; i++ ) {\n      items[i].isLayoutInstant = true;\n    }\n    this.arrange();\n    // reset flag\n    for ( i=0; i < len; i++ ) {\n      delete items[i].isLayoutInstant;\n    }\n    this.reveal( filteredInsertItems );\n  };\n\n  var _remove = proto.remove;\n  proto.remove = function( elems ) {\n    elems = utils.makeArray( elems );\n    var removeItems = this.getItems( elems );\n    // do regular thing\n    _remove.call( this, elems );\n    // bail if no items to remove\n    var len = removeItems && removeItems.length;\n    // remove elems from filteredItems\n    for ( var i=0; len && i < len; i++ ) {\n      var item = removeItems[i];\n      // remove item from collection\n      utils.removeFrom( this.filteredItems, item );\n    }\n  };\n\n  proto.shuffle = function() {\n    // update random sortData\n    for ( var i=0; i < this.items.length; i++ ) {\n      var item = this.items[i];\n      item.sortData.random = Math.random();\n    }\n    this.options.sortBy = 'random';\n    this._sort();\n    this._layout();\n  };\n\n  /**\n   * trigger fn without transition\n   * kind of hacky to have this in the first place\n   * @param {Function} fn\n   * @param {Array} args\n   * @returns ret\n   * @private\n   */\n  proto._noTransition = function( fn, args ) {\n    // save transitionDuration before disabling\n    var transitionDuration = this.options.transitionDuration;\n    // disable transition\n    this.options.transitionDuration = 0;\n    // do it\n    var returnValue = fn.apply( this, args );\n    // re-enable transition for reveal\n    this.options.transitionDuration = transitionDuration;\n    return returnValue;\n  };\n\n  // ----- helper methods ----- //\n\n  /**\n   * getter method for getting filtered item elements\n   * @returns {Array} elems - collection of item elements\n   */\n  proto.getFilteredItemElements = function() {\n    return this.filteredItems.map( function( item ) {\n      return item.element;\n    });\n  };\n\n  // -----  ----- //\n\n  return Isotope;\n\n}));\n\n"],"sourceRoot":"assets/scripts/"}